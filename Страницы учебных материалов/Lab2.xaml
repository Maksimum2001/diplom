<Page x:Class="Diplom.Страницы_лабораторных_работ.Lab2"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Diplom.Страницы_лабораторных_работ"
      mc:Ignorable="d" 
      d:DesignHeight="3000" d:DesignWidth="1000" MaxHeight="3000" MinWidth="900" MinHeight="700"
      Title="Lab2">

    <ScrollViewer>
        <StackPanel Background="Peru">
            <Label>Лабораторная работа № 2. Разработка и оформление модульной структуры проекта</Label>
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" Text="       Цель занятия:"></TextBlock>
                <TextBlock>изучение процесса разработки модульной структуры программного обеспечения, осуществляемого с помощью структурных карт.</TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" Text="       Оборудование, технические и программные средства:"></TextBlock>
                <TextBlock>персональный компьютер, среда программирования Visual Studio</TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" Text="       Продолжительность занятия:"></TextBlock>
                <TextBlock>2 часа.</TextBlock>
            </StackPanel>
            <TextBlock FontWeight="Bold" Margin="35,0,0,0">Задание:</TextBlock>
            <TextBlock Text="       В соответствии с требованиями, предъявляемыми техническим заданием, и результатами внешнего проектирования разработаем модульную структуру подсистемы обслуживания клиента по его кредитной карте в банкомате."></TextBlock>
            <TextBlock FontWeight="Bold" Text="       Теоретические сведения:"></TextBlock>
            <TextBlock Text="       Чтобы добиться декомпозиции на модули максимальной прочности и минимального сцепления, необходимо спроектировать модульную структуру в виде дерева, в том числе и со сросшимися ветвями. В узлах такого дерева размещаются программные модули, а направленные дуги (стрелки) показывают статическую подчинённость модулей, т.е. каждая дуга показывает, что в тексте модуля, из которого она исходит, имеется ссылка на модуль, в который она входит."></TextBlock>
            <Image Source="/Diplom;component/Resources/Lab2_1.png" Height="313" Width="564"></Image>
            <TextBlock HorizontalAlignment="Center">Рис.1. Пример иерархического дерева модулей</TextBlock>
            <TextBlock Margin="0,10,0,0" Text="       При этом модульная структура программы должна, помимо картинки, включать спецификацию программного модуля."></TextBlock>
            <TextBlock Text="       В процессе разработки модульная структура может по-разному использоваться для определения порядка программирования модулей — восходящая и нисходящая разработка."></TextBlock>
            <TextBlock Text="       Предпочтительной является нисходящая разработка. В этой технологии программирование начинается с модуля с самого верхнего уровня. При этом для тестирования модули нижних уровней заменяются простыми по конструкции имитаторами, которые либо моделируют работу нижних уровней (например, реализуют таблицы; вход-отклик), либо просто сообщают о своём вызове и завершаются признаком успеха. Такая реализация обеспечивает большую концептуальную целостность и меньший объём разрабатываемых тестов, каждый модуль здесь тестируется при т.н. «естественном» состоянии информационной среды, т.к. он вызывается реальным (оттестированным) модулем верхнего уровня."></TextBlock>
            <TextBlock FontWeight="Bold" Text="       Выполнение работы:"></TextBlock>
            <TextBlock Text="       В составе программного обеспечения можно выделить следующие программные модули: Головной модуль (Main module), Модуль управления устройством считывания кредитной кары (Credit cart control module), Модуль аутентификации (Autentification module) и Модуль получения и обработки запроса на обслуживание (Reception and processing module). Кроме этого в состав ПО необходимо включить модуль данных кредитной карты (Credit cart data)."></TextBlock>
            <TextBlock Text="       На рис. 1 приведена структурная карта, демонстрирующая отношения между указанными модулями системы."></TextBlock>
            <Image Source="/Diplom;component/Resources/Lab2_2.jpg.png" Height="270" Width="610"></Image>
            <TextBlock HorizontalAlignment="Center" Text="Рис. 1. Модульная структура программного обеспечения"></TextBlock>
            <TextBlock Text="       Согласно этой диаграмме головной модуль обращается к модулям управления устройством считывания кредитной карты, аутентификации и получения и обработки запроса на обслуживание. Вызов указанных модулей осуществляется согласно внутренней логики головного модуля, реализующей следующий сценарий: При инициации действий со стороны клиента головной модуль, вызывает модуль управления устройством считывания кредитной карты для ее ввода и считывания с нее информации. После завершения считывания управление возвращается головному модулю, который затем обращается к модулю аутентификации. Модуль аутентификации проверяет подлинность клиента и вместе с результатом этой проверки возвращает управление головному модулю. В зависимости от результатов аутентификации головной модуль либо вызывает модуль управления устройством считывания для удаления кредитной карты, либо обращается к модулю получения и обработки запроса на обслуживание для предоставления требуемого сервиса. Если осуществляется вызов получения и обработки запроса на обслуживание, то после завершения его работы головной модуль обращается к модулю управления устройством считывания для удаления кредитной карты."></TextBlock>
            <TextBlock Text="       Обмен данными между программными модулями осуществляется через общую область памяти, в которую модуль управления устройством считывания помещает данные о пароле (Parol), атрибуты клиента (Client Attributes) и лимит денег на счету (Limit of money). Модуль аутентификации получает из этой общей области памяти сведения о пароле и возвращает в головной модуль управляющий параметр Autentification flag, содержащий результат аутентификации. Модуль получения и обработки запроса на обслуживание для своей работы получает из общей области памяти атрибуты клиента и лимит денег на счету."></TextBlock>
            <TextBlock Margin="35,20,0,0" FontWeight="Bold">Требования к отчету:</TextBlock>
            <TextBlock Text="              Отчёт должен быть оформлен в Microsoft Office Word, распечатан и предоставлен на проверку. Текст должен быть написан шрифтом Times New Roman, 12. Интервал между строками и абзацами – 1,5. Отступ слева 1,5. Ориентация текста – по ширине страницы. Скриншоты необходимо подписать. Название практической работы, цель работы, ход работы, вывод, ответы на контрольные вопросы, должны быть выделены жирным шрифтом."></TextBlock>
            <TextBlock Margin="35,5,0,0" FontWeight="Bold">Контрольные вопросы:</TextBlock>
            <ListBox>
                <ListBoxItem Margin="50,5,0,0">1. Цель разработки модульной структуры.</ListBoxItem>
                <ListBoxItem Margin="50,5,0,0">2. Виды целостности модулей.</ListBoxItem>
                <ListBoxItem Margin="50,5,0,0">3. Типовые модульные структуры.</ListBoxItem>
                <ListBoxItem Margin="50,5,0,0">4. Построение структурных карт с помощью программного продукта EasyCASE Professional Version 4.21.016.</ListBoxItem>
                <ListBoxItem Margin="50,5,0,40">5. Виды связности модулей.</ListBoxItem>
            </ListBox>
        </StackPanel>
    </ScrollViewer>
</Page>
