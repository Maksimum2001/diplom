<Page x:Class="Diplom.Страницы_учебных_материалов.Str1"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Diplom.Страницы_учебных_материалов"
      mc:Ignorable="d" 
      d:DesignHeight="5000" d:DesignWidth="1000" MaxHeight="10000" MinWidth="1000" MinHeight="700"
      Title="Str1">

    <ScrollViewer>
        <StackPanel Background="DodgerBlue" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Label Content="ПОНЯТИЕ РЕПОЗИОРИЯ ПРОЕКТА. СТРУКТУРА ПРОЕКТА"></Label>
            <TextBlock Text="       Репозиторий - хранилище информации, связанной с проектом разработки программного продукта в течение всего его жизненного цикла. В современных инструментальных системах репозитории приобретают роль фундамента всей информационной среды. Важно, чтобы репозитории помогали работе инструментальных систем." TextDecorations="{x:Null}"  TextAlignment="Justify" Padding="5,5,5,0" />
            <TextBlock Text="       Большинство технологических подходов к разработке программного обеспечения предполагает работу с тремя основными типами информации - модельными спецификациями, интерфейсом прикладного программиста и окружением проекта. Выделим три уровня репозиториев, соответствующих этим типам."></TextBlock>
            <TextBlock Padding="25,0,0,0">1) Модельный</TextBlock>
            <TextBlock Padding="25,0,0,0">2) Программного интерфейса</TextBlock>
            <TextBlock Padding="25,0,0,0">3) Окружения</TextBlock>
            <TextBlock Text="       Уровень моделирования достаточно хорошо может быть описан универсальным языком UML. Данный язык является абстрактным, не привязанным к конкретной модели. Язык дает возможность описать зависимости элементов, иерархию, взаимосвязи, свойства и т. п."></TextBlock>
            <TextBlock Text="       Уровень программного интерфейса разумно описывать с помощью языка определения интерфейсов IDL, обеспечивающего независимость спецификации интерфейсов от их реализации. Уровень играет не только роль промежуточного слоя, также его средства поддерживают распределенное программирование (в том числе в Интернете)."></TextBlock>
            <TextBlock Text="       Репозитории окружения программного проекта предназначен для хранения информации, разделяемой компонентами и подкомпонентами систем программирования в процессе их работы. Приведем ниже основные группы и подгруппы полезной информации." Padding="0" UseLayoutRounding="False"></TextBlock>
            <TextBlock Padding="20,0,0,0">1. Языково-независимая группа</TextBlock>
            <ListBox Background="DodgerBlue" Name="List1">
                <TextBlock Padding="30,0,0,0">• Информация для отладчика</TextBlock>
                <TextBlock Padding="30,0,0,0">• Информация для просмотрщика исходных текстов</TextBlock>
            </ListBox>
            <TextBlock Padding="20,0,0,0">2. Языково-зависимая группа (например, для языка C++)</TextBlock>
            <ListBox Background="DodgerBlue" Name="List2">
                <TextBlock Padding="30,0,0,0">• Информация для шаблонов</TextBlock>
                <TextBlock Padding="30,0,0,0">• Коды встроенных функций</TextBlock>
                <TextBlock Padding="30,0,0,0">• Виртуальные функции</TextBlock>
            </ListBox>
            <TextBlock Padding="20,0,0,0">3. Группа контроля репозитория</TextBlock>
            <ListBox Background="DodgerBlue" Name="List3">
                <TextBlock Padding="30,0,0,0">• Контроль информации о версиях</TextBlock>
                <TextBlock Padding="30,0,0,0">• Контроль отношения к проекту</TextBlock>
                <TextBlock Padding="30,0,0,0">• Тип параллельной обработки</TextBlock>
                <TextBlock Padding="30,0,0,0">• Тип управления репозиторием</TextBlock>
                <TextBlock Padding="30,0,0,0">• Проверка цифровой подписи</TextBlock>
            </ListBox>
            <TextBlock Padding="15,0,0,0">Основными достоинствами применения репозиториев окружения являются:</TextBlock>
            <ListBox Background="DodgerBlue" Name="List4">
                <TextBlock Padding="30,0,0,0">• эффективность работы с информацией;</TextBlock>
                <TextBlock Padding="30,0,0,0">• использование информации для целей оптимизации;</TextBlock>
                <TextBlock Padding="30,0,0,0">• распределенность (из которой следуют доступность, параллелизм и специализация);</TextBlock>
                <TextBlock Padding="30,0,0,0">• модульность, включающая независимость от конкретных инструментов (например, компиляторов);</TextBlock>
                <TextBlock Padding="30,0,0,0">• возможность работы с репозиторием как в архитектуре "клиент-сервер", так и в "связанном" с инструментом режиме.</TextBlock>
            </ListBox>
            <TextBlock Text="       Статистика отмечает, что около 80% ПО создается по уже имеющемуся. Следовательно, необходимо иметь электронную библиотеку, которая будет поддерживать архивы и интеллектуальный поиск нужных прототипов и фрагментов. Одним из наиболее известных репозиториев является Microsoft Repository."></TextBlock>
            <Label Margin="15" FontSize="24" Content="Структура проекта"></Label>
            <TextBlock Text="       Структура системы — это способ организации связей и отношений между элементами (подсистемами). При разработке структуры системы задается описание множества элементов системы и связей между ними, распределение задач по уровням и элементам системы, выбор комплекса средств, обеспечивающих их эффективное решение."></TextBlock>
            <TextBlock Text="       Управляемость любого объекта зависит от того, насколько эффективно была произведена детализация объекта управления, т.е. дробление единого целого на иерархические подсистемы и компоненты, в отношении которых управленческие воздействия являются актуальными и адекватными."></TextBlock>
            <TextBlock Text="       В терминологии проектного менеджмента структура проекта представляет собой дерево ориентированных на продукт компонентов, представленных оборудованием, работами, услугами и информацией, полученными в результате реализации проекта. Иначе говоря, структура проекта — это организация связей и отношений между его элементами."></TextBlock>
            <TextBlock Text="       Структура проекта призвана определить продукцию, которую необходимо разработать или произвести, и связать элементы работы, которую предстоит выполнить, как между собой, так и с конечной целью проекта. Формирование структуры начинается с разделения целей проекта на значительно меньшие блоки работ, вплоть до достижения самих мелких позиций, подлежащих контролю (дерево целей)."></TextBlock>
            <TextBlock Text="       Tакая древообразная структура позволяет разбить общий объем работ по проекту на поддающиеся управлению независимые блоки. Таким образом, устанавливается логическая связь между ресурсами и объемами работ, которые предстоит осуществить."></TextBlock>
            <TextBlock Padding="30,0,0,0">Структурирование проекта должно включать разделение проекта по следующим признакам:</TextBlock>
            <ListBox Background="DodgerBlue" Name="List5">
                <ListBoxItem Padding="30,0,0,0">1. компоненты продукции проекта;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">2. этапы жизненного цикла;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">3. элементы организационной структуры.</ListBoxItem>
            </ListBox>
            <TextBlock Text="       Процесс структуризации является неотъемлемой частью процесса планирования проекта, а также этапом подготовки сводного плана проекта и матрицы распределения ответственности и обязанностей. К основным задачам структуризации относятся:"></TextBlock>
            <ListBox Background="DodgerBlue" Name="List6">
                <ListBoxItem Padding="30,0,0,0">• разбивка проекта на поддающиеся управлению блоки;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• распределение ответственности за различные элементы проекта с учетом структуры организации и имеющихся ресурсов;></ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• точная оценка необходимых затрат — финансовых, временных, материальных;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• создание единой базы для планирования, составления смет, контроля за затратами;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• увязка работ по проекту с системой ведения бухгалтерского учета;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• конкретизация целей проекта по подразделениям компании;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• определение подрядов.</ListBoxItem>
            </ListBox>
            <TextBlock Text="       Таким образом, основная задача структуризации — определить вещественные компоненты проекта. В результате получается под продуктовая структура. Структуризация проекта по этапам жизненного цикла называется структурой процесса. Структуризация проекта по видам выполняемых функций создает организационную структуру проекта. Разработка организационной структуры обычно включает в себя следующие шаги:"></TextBlock>
            <TextBlock Padding="30,0,0,0" Text="•   устанавливаются цели и задачи экономической деятельности;"></TextBlock>
            <TextBlock Padding="30,0,0,0" Text="• определяются функции, которые должно осуществлять предприятие для достижения указанных целей (общее руководство, финансы, финансовый контроль, управленческий и бухгалтерский учет, управление персоналом, маркетинг, продажа и сбыт, снабжение, производство, бизнес-планирование, экономический анализ);"/>
            <TextBlock Padding="30,0,0,0" Text="•   функции группируются или взаимосвязываются;"></TextBlock>
            <TextBlock Padding="30,0,0,0" Text="•  выявляются структурные подразделения, отвечающие за реализацию функций. Если на предприятии создается новое подразделение, необходимо учитывать, какую функцию оно будет выполнять, т.е. функции должны быть спроецированы на структурные звенья;"></TextBlock>
            <TextBlock Padding="30,0,0,0" Text="•   анализируются, планируются и описываются все основные виды работ;"></TextBlock>
            <TextBlock Padding="30,0,0,0" Text="•   составляется программа набора и обучения персонала для новых подразделений."></TextBlock>
            <TextBlock Padding="0,0,0,0" Text="Основные типы структур, используемых при управлении проектами:"></TextBlock>
            <ListBox Background="DodgerBlue" Name="List7">
                <ListBoxItem Padding="30,0,0,0">• функциональная</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• матричная</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">• проектная</ListBoxItem>
            </ListBox>
            <TextBlock Margin="0,7" Text="       В функциональной структуре управление осуществляется линейным руководителем через группу подчиненных ему функциональных руководителей. Если этот тип используется при управлении проектами, то, как правило, назначается один или несколько координаторов, осуществляющих связь между функциональными подразделениями." ></TextBlock>
            <Image Source="/Diplom;component/Resources/1_1.jpg"/>
            <TextBlock Margin="0,8,0,0" Text="       При матричной структуре для решения проблем создаются временные проектные группы, во главе которых стоят руководители проектов. взаимодействие руководителя проекта с функциональными отделами осуществляется по горизонтали, и эти связи, накладываясь на традиционные вертикальные связи иерархической функциональной структуры, образуют матрицу взаимодействия."></TextBlock>
            <TextBlock Text="       За все конкретные результаты работы по проекту отвечает руководитель проекта, который не располагает непосредственной административной властью над членами своей проектной группы. Возможны разновидности матричной структуры - слабая матричная структура приближена к функциональной, сильная - к проектной."></TextBlock>
            <TextBlock Text="       Слабая матричная структура - координация осуществляется сотрудником функционального подразделения в свободное от основных обязанностей время."></TextBlock>
            <Image Source="/Diplom;component/Resources/1_2.jpg"></Image>
            <TextBlock Margin="0,8,0,5" Text="       В проектной структуре для решения конкретных задач, связанных с проектом, создается рабочая группа, которая распускается после завершения работы над проектом. Персонал и ресурсы, ранее привлеченные к работе, возвращаются в свои функциональные подразделения. Для решения задач перспективного развития в составе предприятия создается специальное подразделение, а руководители проектов сосредотачивают свое внимание на выполнении конкретных задач."></TextBlock>
            <TextBlock Text="       Сбалансированная матричная структура — координация осуществляется сотрудником, полностью освобожденным от текущих обязанностей."></TextBlock>
            <Image Source="/Diplom;component/Resources/1_3.jpg" ></Image>
            <TextBlock Margin="0,15" Text="       Сильная матричная структура — создается подразделение, объединяющее менеджеров проектов и контролирующее ресурсы."></TextBlock>
            <Image Source="/Diplom;component/Resources/1_4.jpg"></Image>
            <Label Margin="15" Content="Проектная структура"></Label>
            <Image Source="/Diplom;component/Resources/1_5.jpg" ></Image>
            <TextBlock Text="       Организационная структура проектной команды должна соответствовать основным видам деятельности по реализации проекта. Процесс структуризации проекта может быть представлен в виде следующей совокупности стандартных шагов:"></TextBlock>
            <TextBlock Text="       1.	Определение проекта. Подразумевает четкую формулировку характера, целей и содержания проекта, а также определение всех конечных продуктов проекта с их характеристиками. Здесь же должна быть составлена иерархия целей."></TextBlock>
            <TextBlock Text="       2.	Уровень детализации. На этом шаге рассматриваются различные уровни детализации плана и выявляется оптимальное количество уровней элементов структуры."></TextBlock>
            <TextBlock Text="       3.	Структура процесса. Разрабатывается схема жизненного цикла проекта."></TextBlock>
            <TextBlock Text="       4.	Организационная структура, т.е. организационная схема проекта, охватывающая все группы участников или отдельных участников, занятых в проекте, включая лиц из внешнего окружения, заинтересованных в реализации проекта."></TextBlock>
            <TextBlock Text="       5.	Структура продукта — схема разбивки конечного продукта по подсистемам или компонентам, включая материальное, программное, информационное, сервисное обеспечение, если необходимо, то и территориальное распределение."></TextBlock>
            <TextBlock Text="       6.	Система бухгалтерских счетов организации — предполагает разработку системы кодов, применяемых при структурировании проекта. Должна основываться на существующем в организации плане бухгалтерских счетов и на системе внутреннего учета."></TextBlock>
            <TextBlock Text="       7.	Структура разбивки проекта. Результаты шагов с 3 по 6 объединяются в единую структуру проекта."></TextBlock>
            <TextBlock Text="       8.	Генеральный сводный план проекта. Может в дальнейшем подвергаться дальнейшей детализации в процессе поиска критического пути."></TextBlock>
            <TextBlock Text="       9.	Матрица распределения ответственности. В результате анализа отношений между элементами структуры проекта и организационной структурой строится матрица, где элементы структуры проекта становятся строками, а элементы организационной структуры компании — столбцами. В ячейках матрицы уровни ответственности обозначаются при помощи условных различных обозначений или кодов."></TextBlock>
            <TextBlock Text="Для структуризации проектов используется ряд специальных моделей:"></TextBlock>
            <ListBox Background="DodgerBlue" Name="List8">
                <ListBoxItem Padding="30,0,0,0">1) дерево целей;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">2) дерево решений;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">3) дерево работ;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">4) организационная структура исполнителей;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">5) матрица ответственности;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">6) сетевая модель;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">7) структура потребляемых ресурсов;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">8) структура затрат;</ListBoxItem>
                <ListBoxItem Padding="30,0,0,0">9) структура стоимости.</ListBoxItem>
            </ListBox>
            <TextBlock Margin="0,10,0,50" Text="       Методы структуризации принципиально сводятся к двум: «сверху вниз», т.е. к определению общих задач с последующей детализацией, и «снизу-вверх» — определение частных задач с последующим их обобщением."></TextBlock>
        </StackPanel>
    </ScrollViewer>
</Page>
